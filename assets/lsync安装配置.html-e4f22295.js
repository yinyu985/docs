import{_ as s,W as n,X as a,a0 as e}from"./framework-b4edc447.js";const c={},t=e(`<h1 id="lsync安装配置" tabindex="-1"><a class="header-anchor" href="#lsync安装配置" aria-hidden="true">#</a> lsync安装配置</h1><p>Lysncd即Live Syncing Daemon，它是开源的数据实时同步工具(后台进程)，基于inotify和rsync。</p><p>Lysncd会密切监测本地服务器上的参照目录，当发现目录下有文件或目录变更后，立刻通知远程服务器，并通过rsync 或rsync+ssh方式实现文件同步。这样做的好处就是，你可以利用Lsyncd搭建一个VPS同步镜像，应用场景例如CDN镜像、网站数据备份、网站搬家等等。</p><p>发送端需要安装lsyncd，而接收端不需要安装。</p><p>lsyncd是基于rsync,故发送端安装lsyncd后会也自动依赖安装rsync。</p><h2 id="发送端设置ssh免密登录" tabindex="-1"><a class="header-anchor" href="#发送端设置ssh免密登录" aria-hidden="true">#</a> 发送端设置SSH免密登录</h2><p>如果想要将发送端的数据同步到接收端，发送端必须拥有免密码登录接收端的权限，可以设置密钥登录来完成。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token comment">#生成秘钥直接按回车</span>
ssh-copy-id 目的IP <span class="token comment">#将公钥发送到目标机器</span>
<span class="token function">ssh</span> <span class="token number">192.168</span>.1.101  <span class="token comment">#测试免密效果</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送端安装lsync" tabindex="-1"><a class="header-anchor" href="#发送端安装lsync" aria-hidden="true">#</a> 发送端安装lsync</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> epel-release
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> lsyncd
lsyncd <span class="token parameter variable">--version</span> <span class="token comment">#查看lsyncd版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送端配置-etc-lsyncd-conf" tabindex="-1"><a class="header-anchor" href="#发送端配置-etc-lsyncd-conf" aria-hidden="true">#</a> 发送端配置/etc/lsyncd.conf</h2><blockquote><p>（lua语言通过两个“-”注释）</p></blockquote><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">settings</span> <span class="token punctuation">{</span>
   logfile <span class="token operator">=</span> <span class="token string">&quot;/var/log/lsyncd.log&quot;</span><span class="token punctuation">,</span>  <span class="token comment">-- 指定日志文件位置</span>
   statusFile <span class="token operator">=</span> <span class="token string">&quot;/var/log/lsyncd.status&quot;</span><span class="token punctuation">,</span>  <span class="token comment">-- 指定状态文件位置</span>
   inotifyMode <span class="token operator">=</span> <span class="token string">&quot;CloseWrite&quot;</span><span class="token punctuation">,</span> <span class="token comment">--当文件被关闭时开始同步</span>
   maxProcesses <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">--最大线程，ssh模式的缺点就是最大线程只能为1</span>
<span class="token punctuation">}</span>
<span class="token function">sync</span> <span class="token punctuation">{</span>
    default<span class="token punctuation">.</span>rsyncssh<span class="token punctuation">,</span> <span class="token comment">--指定工作模式为ssh</span>
    source    <span class="token operator">=</span> <span class="token string">&quot;/home/prometheus-2.31.1.linux-amd64/&quot;</span><span class="token punctuation">,</span>  <span class="token comment">--源路径</span>
    host      <span class="token operator">=</span> <span class="token string">&quot;10.31.140.28&quot;</span><span class="token punctuation">,</span>  <span class="token comment">--目标主机</span>
    targetdir <span class="token operator">=</span> <span class="token string">&quot;/home/prometheus-2.31.1.linux-amd64/&quot;</span><span class="token punctuation">,</span> <span class="token comment">--目标路径</span>
    maxDelays <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment">--为了实时同步，一般设置为1，表示即使只有一个文件改变也同步</span>
    delay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment">-- init = false,</span>
    rsync    <span class="token operator">=</span> <span class="token punctuation">{</span>
        binary <span class="token operator">=</span> <span class="token string">&quot;/usr/bin/rsync&quot;</span><span class="token punctuation">,</span><span class="token comment">--告诉lsync,rsync的地址在哪里</span>
        archive <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> <span class="token comment">-- 打包后再同步(打包不等于压缩，打包即可以压缩也可以不压缩)</span>
        compress <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token comment">-- 压缩后再同步</span>
        verbose  <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span><span class="token comment">-- 输出同步信息 </span>
       _extra <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;--include=rules.yml&quot;</span><span class="token punctuation">,</span><span class="token comment">--同步的文件</span>
      <span class="token string">&quot;--exclude=*&quot;</span><span class="token punctuation">,</span><span class="token comment">--排除掉的文件</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        ssh   <span class="token operator">=</span> <span class="token punctuation">{</span>
        port  <span class="token operator">=</span>  <span class="token number">22</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送端启动lsyncd" tabindex="-1"><a class="header-anchor" href="#发送端启动lsyncd" aria-hidden="true">#</a> 发送端启动lsyncd</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start lsyncd
systemctl enabled lsyncd <span class="token comment">#配置开机启动</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接收端安装rsync" tabindex="-1"><a class="header-anchor" href="#接收端安装rsync" aria-hidden="true">#</a> 接收端安装rsync</h2><p>检查是否已安装，rsync配置文件不用做修改。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">rsync</span> <span class="token comment">#rsync是git的依赖，所以如果装了git，就会有rsync</span>
<span class="token function">netstat</span> <span class="token parameter variable">-an</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">873</span> <span class="token comment">#检查rsync服务是否启动</span>
systemctl start rsyncd
systemctl status rsyncd <span class="token comment">#查看服务状态</span>
systemctl <span class="token builtin class-name">enable</span> rsyncd.service
<span class="token function">kill</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">rsync</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span> <span class="token comment"># 关闭lsync</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置lsync开启自启动" tabindex="-1"><a class="header-anchor" href="#设置lsync开启自启动" aria-hidden="true">#</a> 设置lsync开启自启动</h2><p>写进/etc/rc.local</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
/usr/bin/lsyncd /etc/lsyncd.conf <span class="token comment">#启动lsync</span>
<span class="token comment">#kill $(ps -aux |grep lsync |awk &#39;{print $2}&#39;) # 关闭lsync</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试成功" tabindex="-1"><a class="header-anchor" href="#测试成功" aria-hidden="true">#</a> 测试成功</h2>`,22),l=[t];function p(o,i){return n(),a("div",null,l)}const d=s(c,[["render",p],["__file","lsync安装配置.html.vue"]]);export{d as default};
